#! /usr/bin/env perl

use strict;

use Getopt::Long;
use Cwd;
use Cwd 'chdir';

my $pwd = getcwd();
my $push;
my $help;

GetOptions("push" => \$push,
           "help|?" => \$help,
    ) or printHelp();

printHelp() if($help);

sub printHelp
{
  print("\ncommitAutoMerge [--push] [--help|?]\n");
  print("\t--push: push commit, default is just commit\n");
  print("\t--help|?: print help\n\n");
  exit 1;
}

# find all repo's
my @repos;
my $numRepos = "0";
if(chdir(".git")) {
  chdir($pwd);
  push(@repos, ".");
  ++$numRepos;
} else {
  my @ls = qx/ls -1/;
  chomp(@ls);
  foreach my $dir(@ls) {
    if(chdir("${dir}/.git")) {
      push(@repos, "$dir");
      ++$numRepos;
      chdir($pwd);
    }
  }
}
print("numRepos = $numRepos\n");
if($numRepos eq "0") {
  print("No repositories found in $pwd\n\n");
  exit 2;
}

foreach my $repo(@repos) {
  my $dir = "$pwd/$repo";
  if($dir eq ".") {
    $dir = $pwd;
  }
  if(!-d($dir)) {
    print("ERROR: $dir is not a directory\n");
    exit 3;
  }
  my $cmd = "cd ${dir}; git branch | grep \"^\*\" | awk '{print \$2}'";
  my $branch = qx@$cmd@;
  chomp($branch);
  print("\nbranch = $branch\n");
  $cmd = "cd ${dir}; git remote -v | grep \"tfs\.ansys\.com\" | head -1";
  my $remote = qx/$cmd/;
  chomp($remote);
  my $mainBranch = "master";
  if($remote ne "") {
    print("\nremote is TFS\n");
    $mainBranch = "develop";
  }
  if("$branch" ne "$mainBranch") {
    print("INFO: repo $repo is on branch: $branch\n");
    $cmd = "cd ${dir}; git status -s";
    my $status = qx/$cmd/;
    chomp($status);
    if($status ne "") {
      print("INFO: repo $repo has uncommitted changes:\n $status\n");
      print("INFO: committing changes in $repo to $branch\n");
      $cmd = "cd ${dir}; git commit -m\"Merge remote-tracking branch";
      $cmd = "$cmd 'origin/$mainBranch' into $branch\"";
      if(system($cmd)) {
        print("ERROR: $cmd failed in $repo\n");
        exit 4;
      }
      if($push) {
        print("INFO: pushing $repo\n");
        $cmd = "cd ${dir}; git push";
        if(system($cmd)) {
          print("ERROR: $cmd failed in $repo\n");
          exit 5;
        }
      }
    } else {
      print("INFO: no uncommitted changes in $repo\n");
    }
  } else {
    print("INFO: repo $repo is on master...\n");
  }
}

print("SUCCESS: commitAutoMerge completed\n\n");
