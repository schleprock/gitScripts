#! /usr/bin/env perl

use strict;

use GitModules;

use Getopt::Long;
use Cwd;
use Cwd 'chdir';
use File::Basename;

my $scriptName = basename($0);

my $retries = 4;
my $pull;
my $help;
my $debugMode;

GetOptions("r:i" => \$retries,
           "pull" => \$pull,
           "debugMode" => \$debugMode, 
           "help|?" => \$help,
    ) or printHelp();

printHelp() if($help);

print("\n");

sub printHelp {
  print("\n$scriptName [-r [retries]] [--pull] [--help|?]\n");
  print("\t-r [numb]: number of retries, default is $retries\n");
  print("\t--pull: do a pull instad of a fetch (ie merge)\n");
  print("\t--debugMode: turn on debugMode (off by default)\n");
  print("\n\n");
  exit;
}

my $here = cwd();
print("\nRunning $scriptName in $here\n");
my $gitCommand = "fetch";
if($pull) {
  $gitCommand = "pull";
}
my $command = "git $gitCommand --progress";
my $count = 0;
while($count  < $retries) {
  print("Running $command in $here, count = $count\n");
  if(system($command)) {
    print("\n$scriptName failed in $here, count = $count\n");
    ++$count;
    if($count >= $retries) {
      print("\n$scriptName failed all retries in $here, count = $count\n");
      exit(2);
    }
  } else {
    print("\n$scriptName passed in $here, count = $count\n");
    exit(0);
  }
}
print("\nERROR: Should not have gotten here: $here, count = $count\n");
exit(3);
