#! /usr/bin/env perl

use strict;

use GitModules;
use Getopt::Long;
use Cwd;
use Cwd 'chdir';
use File::Basename;

my $scriptName = basename($0);

my $noxmessage;
my $j;
my $ignoreUncommittedChanges;
my $full;
my $no3rdparty;
my $debug;
my $help;

GetOptions("noxmessage" => \$noxmessage,
           "j:i" => \$j,
           "ignoreUncommittedChanges" => \$ignoreUncommittedChanges,
           "full" => \$full,
           "no3rdparty" => \$no3rdparty,
           "debug" => \$debug,
           "help|?" => \$help,
    ) or printHelp();

if($help) {
  printHelp();
}

sub printHelp
{
  print("\n$scriptName [--noxmessage] [-j <int>] ");
  print("[--ignoreUncommittedChanges] ");
  print("[--no3rdparty] [--help]\n\n");
  print("Update a set of repo's or just a single repo.\n");
  print("\t--noxmessage: suppress xmessage\n");
  print("\t-j <int>: set parallel limit, default is all cpu's\n");
  print("\t--full: do a full 3rdparty update instead of just modelica\n");
  print("\t--no3rdparty: do not update 3rdparty\n");
  print("\t--ignoreUncommittedChanges: self explanatory\n");
  print("\t--debug: turn on debug mode\n");
  print("\t--help: print help\n");
  exit 1;
}

my $fail = 0;
my $output = " ";
my $pwd = cwd();

my $jSw = " ";
if($j) {
  $jSw = "-j $j";
}
my $igChMode = "";
if($ignoreUncommittedChanges) {
  $igChMode = "--ignoreUncommittedChanges";
}
my $debugMode = "";
if(defined($debug))
{
  $debugMode = "--debug";
}
my $command = "~/gitScripts/gitFetch --pull -r 2 $jSw $debugMode $igChMode";
print("Running $command\n");
if(system($command)) {
  $output = "$command failed";
  $fail = 1;
  printAndExit();
}

if(chdir(".git")) {
  # we're in a git repo, don't run the 3rdparty stuff
  $output = "$scriptName SUCCEEDED in $pwd";
  printAndExit();
}

my $thirdPartyScript = "$ENV{HOME}/TwinBuilder_Dev_ModelicaScripts/3rdpartyArtifactory";
if($no3rdparty) {
  print("\nINFO: skipping update of 3rdparty repo\n");
} elsif(-x $thirdPartyScript) {
  my $cmd = $thirdPartyScript;
  if($full) {
    $cmd = "$cmd --full";
    print("INFO: doing full 3rdparty update\n");
  }
  my $res = system($cmd);
  print("\n$cmd returned $res\n");
  if($res)
  {
    $output = "$scriptName FAILED: $cmd failed in $pwd";
    $fail = 1;
    printAndExit();
  }
} else {
  print("\nCould not find 3rdparty script, skipping\n");
}
$output = "$scriptName SUCCEEDED in $pwd";
printAndExit();



sub printAndExit
{
  print("\n$output\n\n");
  if(!$noxmessage && (-f "/c/WINDOWS/system32/msg")) 
  {
    my $cmd = "msg wschilp /TIME:1000000 \"${output}\"";
    system($cmd);
  }
  exit($fail);
}
